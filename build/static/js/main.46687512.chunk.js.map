{"version":3,"sources":["components/Kontakt.js","services/kontakti.js","App.js","index.js"],"names":["Kontakt","kontakt","izmjena","brisiKontakt","useState","imeprezime","ime","postaviIme","email","postaviEmail","value","onChange","e","target","onClick","id","axios","get","noviObjekt","post","put","delete","App","kontakti","postaviKontakte","unosIme","postaviUnos1","unosEmail","postaviUnos2","unosFilter","postaviUnos3","konktaktiPrikaz","filter","k","toLowerCase","includes","toLocaleLowerCase","useEffect","console","log","kontaktiServer","then","response","data","find","noviK","map","onSubmit","preventDefault","concat","type","className","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46687512.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nconst Kontakt=({kontakt,izmjena,brisiKontakt})=>{\r\n    const [ime,postaviIme]=useState(kontakt.imeprezime);\r\n    const [email,postaviEmail]=useState(kontakt.email)\r\n    const izmjena1=(e)=>{\r\n        postaviIme(e.target.value);\r\n        \r\n    }\r\n    const izmjena2=(e)=>{\r\n        postaviEmail(e.target.value);\r\n       \r\n    }\r\n    const spremi=()=>{\r\n        izmjena(ime,kontakt.id,email)\r\n    }\r\n    return(\r\n         <li>\r\n             <strong>Ime i prezime: </strong>\r\n             <input  value={ime} onChange={izmjena1}/>  \r\n             <strong>E-mail: </strong>\r\n             <input  value={email} onChange={izmjena2}/> \r\n             <button onClick={spremi}>Spremi izmjene</button>\r\n             <button onClick={brisiKontakt}>Brisi</button>\r\n        </li>\r\n        \r\n    );\r\n}\r\nexport default Kontakt;","import axios from \"axios\";\r\n\r\nconst osnovniUrl=\"/api/kontakti\";\r\n\r\nconst dohvatiSve=()=>{\r\n    return axios.get(osnovniUrl);\r\n}\r\n\r\nconst stvori=noviObjekt=>{\r\n    return axios.post(osnovniUrl,noviObjekt);\r\n}\r\n\r\nconst osvjezi=(id,noviObjekt)=>{\r\n    return axios.put(`${osnovniUrl}/${id}`,noviObjekt);\r\n}\r\n\r\nconst brisi=id=>{\r\n    return axios.delete(`${osnovniUrl}/${id}`);\r\n}\r\n\r\nexport default{\r\n    dohvatiSve:dohvatiSve,\r\n    stvori:stvori,\r\n    osvjezi:osvjezi,\r\n    brisi:brisi\r\n}","import React,{useState,useEffect} from 'react';\r\nimport Kontakt from \"./components/Kontakt\";\r\nimport kontaktiServer from \"./services/kontakti\";\r\n// import './App.css';\r\n\r\nconst App=()=>{\r\n  const [kontakti,postaviKontakte]=useState([]);\r\n  const [unosIme,postaviUnos1]=useState(\"\");\r\n  const [unosEmail,postaviUnos2]=useState(\"\");\r\n  const [unosFilter,postaviUnos3]=useState(\"\");\r\n  let konktaktiPrikaz=unosFilter !== \"\" ? kontakti.filter(k=>k.imeprezime.toLowerCase().includes(unosFilter.toLocaleLowerCase())) : kontakti;\r\n\r\n  useEffect(()=>{\r\n    console.log(\"Effect hook\");\r\n    kontaktiServer.dohvatiSve().then(response=>{\r\n      console.log(\"Kontakti dohvaÄ‡eni\");\r\n      postaviKontakte(response.data);\r\n    })\r\n  },[])\r\n\r\n  const izmjena=(ime,id,email)=>{\r\n    const kontakt=kontakti.find(k=>k.id===id);\r\n    const noviK={...kontakt,imeprezime:ime,email:email}\r\n    kontaktiServer.osvjezi(id,noviK).then(response=>{\r\n      console.log(response.data);\r\n      postaviKontakte(\r\n        kontakti.map(k=>k.id!==id ? k : response.data)\r\n      )\r\n    })\r\n    \r\n  }\r\n\r\n  const noviKontakt=(e)=>{\r\n    e.preventDefault();\r\n    const noviObjekt={\r\n      imeprezime:unosIme,\r\n      email:unosEmail\r\n    };\r\n    kontaktiServer.stvori(noviObjekt).then(response=>{\r\n      console.log(response.data);\r\n      postaviKontakte(kontakti.concat(response.data));\r\n      postaviUnos1(\"\");\r\n      postaviUnos2(\"\");\r\n    })\r\n    \r\n\r\n  }\r\n\r\n  const promjenaUnosa1=(e)=>{\r\n    postaviUnos1(e.target.value);\r\n  }\r\n  const promjenaUnosa2=(e)=>{\r\n    postaviUnos2(e.target.value);\r\n  }\r\n  const promjenaUnosa3=(e)=>{\r\n    postaviUnos3(e.target.value);\r\n  }\r\n  const brisanjeKontakta=(id)=>{\r\n    kontaktiServer.brisi(id).then(response=>{\r\n      console.log(response);\r\n      postaviKontakte(kontakti.filter(k=>k.id!==id))\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n     <h1>Adresar</h1>\r\n     <hr></hr>\r\n     <h3>Unos novog kontakta</h3>\r\n     <form onSubmit={noviKontakt}>\r\n       <label>\r\n         Ime i prezime:\r\n         <input type=\"text\" className=\"name\" value={unosIme} onChange={promjenaUnosa1}/>\r\n       </label>\r\n       <br />\r\n       <label>\r\n         E-mail:\r\n         <input type=\"email\" className=\"email\" value={unosEmail} onChange={promjenaUnosa2}/>\r\n       </label>\r\n       <br />\r\n       <button type=\"submit\">Dodaj</button>\r\n     </form>\r\n     <hr />\r\n      <h3>Filtriranje po imenu</h3>\r\n      <input type=\"text\" value={unosFilter} onChange={promjenaUnosa3}/>\r\n     <hr />\r\n     <h3>Popis kontakata</h3>\r\n     <ul>\r\n       {konktaktiPrikaz.map(k=>\r\n        <Kontakt \r\n        key={k.id} \r\n        kontakt={k} \r\n        brisiKontakt={()=>brisanjeKontakta(k.id)}\r\n        izmjena={izmjena}/>\r\n      )}\r\n     </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}